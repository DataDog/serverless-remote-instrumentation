variables:
  DOCKER_TARGET_IMAGE: registry.ddbuild.io/ci/serverless-remote-instrumentation
  DOCKER_TARGET_VERSION: latest
  SELF_MONITORING: true
  RUNNING_IN_GITHUB_ACTION: true

.defined_rules:
  merge_into_prod:
    - if: '$CI_COMMIT_BRANCH == "alex.angelillo/test-generated-template" && $CI_PIPELINE_SOURCE == "push"'
      when: on_success

stages:
  - build
  - publish

ci image:
  stage: build
  image: registry.ddbuild.io/images/docker:20.10
  tags: ["arch:arm64"]
  resource_group: pipeline
  needs: []
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - .gitlab/Dockerfile
      when: on_success
  variables:
    DOCKER_TARGET: ${DOCKER_TARGET_IMAGE}:${DOCKER_TARGET_VERSION}
  script:
    - docker buildx build --platform linux/amd64,linux/arm64 --no-cache --pull --push --tag ${DOCKER_TARGET} -f .gitlab/Dockerfile .

inside:
  stage: publish
  allow_failure: false
  resource_group: pipeline
  image: ${DOCKER_TARGET_IMAGE}:${DOCKER_TARGET_VERSION}
  tags: ["arch:arm64"]
  needs: []
  rules:
    - !reference [.defined_rules, merge_into_prod]
  script:
    - echo "RUN!"
